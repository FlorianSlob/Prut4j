(s/defrole ::player)
(s/defrole ::dealer)

(s/defsession ::go-fish [k]
(s/alt-every [i (set (range k))]
  (s/cat (s/-->> discourje.examples.gofish.Turn ::dealer (::player i))
         (::go-fish-turn i k))))

(s/defsession ::go-fish-turn [i k]
  (s/alt-every [j (disj (set (range k)) i)]
    (s/cat (s/-->> discourje.examples.gofish.Ask (::player i) (::player j))
           (s/alt (s/cat (s/-->> discourje.examples.gofish.Card (::player j) (::player i))
                         (s/-->> discourje.examples.gofish.OutOfCards (::player i) ::dealer))
                  (s/cat (s/-->> discourje.examples.gofish.Card (::player j) (::player i))
                         (::go-fish-turn i k))
                  (s/cat (s/-->> discourje.examples.gofish.Go (::player j) (::player i))
                         (s/-->> discourje.examples.gofish.Fish (::player i) ::dealer)
                         (s/alt (s/-->> discourje.examples.gofish.Card ::dealer (::player i))
                                (s/-->> discourje.examples.gofish.OutOfCards ::dealer (::player i)))
                         (s/-->> discourje.examples.gofish.Turn (::player i) (::player j))
                         (::go-fish-turn j k))))))
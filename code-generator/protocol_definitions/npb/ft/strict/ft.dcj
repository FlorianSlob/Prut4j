(s/defrole ::master)
(s/defrole ::evolve)
(s/defrole ::fft)

(s/defsession ::ft [k]
    (s/cat (s/* (s/alt (s/cat (s/cat-every [i (range k)]
                                  (s/-->> discourje.examples.npb3.impl.FTThreads.EvolveMessage ::master (::evolve i)))
                                (s/cat-every [i (range k)]
                                  (s/-->> discourje.examples.npb3.impl.DoneMessage (::evolve i) ::master)))
                         (s/cat (s/cat-every [i (range k)]
                                  (s/-->> discourje.examples.npb3.impl.FTThreads.FFTMessage ::master (::fft i)))
                                (s/cat-every [i (range k)]
                                  (s/-->> discourje.examples.npb3.impl.DoneMessage (::fft i) ::master)))
                         (s/cat (s/cat-every [i (range k)]
                                  (s/-->> discourje.examples.npb3.impl.FTThreads.FFTSetVariablesMessage ::master (::fft i)))
                                (s/cat-every [i (range k)]
                                  (s/-->> discourje.examples.npb3.impl.DoneMessage (::fft i) ::master)))))
             (s/cat-every [i (range k)]
               (s/cat (s/cat (s/-->> discourje.examples.npb3.impl.ExitMessage ::master (::evolve i))
                             (s/-->> discourje.examples.npb3.impl.DoneMessage (::evolve i) ::master))
                      (s/cat (s/-->> discourje.examples.npb3.impl.ExitMessage ::master (::fft i))
                             (s/-->> discourje.examples.npb3.impl.DoneMessage (::fft i) ::master))))
             (s/cat (s/cat-every [i (range k)]
                      (s/close ::master (::evolve i)))
                    (s/cat-every [i (range k)]
                      (s/close (::evolve i) ::master))
                    (s/cat-every [i (range k)]
                      (s/close ::master (::fft i)))
                    (s/cat-every [i (range k)]
                      (s/close (::fft i) ::master)))))
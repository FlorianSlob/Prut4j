; (s/defrole "master")
; (s/defrole "worker")

; (s/defsession ::cg [k]

   (s/cat (s/* (s/par-every [i (range 3)]
                 (s/cat (s/-->> discourje.examples.npb3.impl.CGThreads.CGMessage "master" ("worker" i))
                        (s/-->> discourje.examples.npb3.impl.DoneMessage ("worker" i) "master"))))
          (s/par-every [i (range 3)]
            (s/cat (s/-->> discourje.examples.npb3.impl.ExitMessage "master" ("worker" i))
                   (s/-->> discourje.examples.npb3.impl.DoneMessage ("worker" i) "master")))
          (s/par (s/par-every [i (range 3)]
                   (s/close "master" ("worker" i)))
                 (s/par-every [i (range 3)]
                   (s/close ("worker" i) "master"))))

;)



; (s/cat (s/par-every [i (range 3)]
;                      (s/cat (s/-->> String "master" ("worker" i))
;                             (s/-->> String ("worker" i) "master")))
;         (s/par (s/par-every [i (range 3)]
;                             (s/close "master" ("worker" i)))
;                (s/par-every [i (range 3)]
;                             (s/close ("worker" i) "master"))))
